# Note: you can amend this values.yaml file to substitute your own custom docker images instead of those
# provided by the Jupyter project if required.

proxy:
  service:
    type: ClusterIP
  https: # Enable and extend to configure HTTPS.
    enabled: false
  traefik:
    containerSecurityContext: &security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  secretSync:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
  chp:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value

hub:
  podSecurityContext:
    fsGroup: 1000950000
    fsGroupChangePolicy: OnRootMismatch
  containerSecurityContext:
    <<: *security_context
    runAsUser: # let openshift set the value
    runAsGroup: # let openshift set the value
  config:
    Authenticator:
      admin_users:
        - rligteringen
        - ronald
    GenericOAuthenticator:
      username_key: 'netid'
      client_id: "notebook-tw1-13.apps.ocp.k8s.tudelft.nl"
      client_secret: "5d6665d1-6f2c-41be-a877-df8f62f95b8f"   # or pull from a secret via extraEnv (below)
      authorize_url: "https://auth-test.tudelft.nl/auth/realms/login-tudelft/protocol/openid-connect/auth"
      token_url: "https://auth-test.tudelft.nl/auth/realms/login-tudelft/protocol/openid-connect/token"
      userdata_url: "https://auth-test.tudelft.nl/auth/realms/login-tudelft/protocol/openid-connect/userinfo"
      oauth_callback_url: "https://notebook-tw1-13.apps.ocp.k8s.tudelft.nl/hub/oauth_callback"
      scope:
        - openid
      login_service: "TU Delft netID"
      allow_all: true
    JupyterHub:
      authenticator_class: generic-oauth

singleuser:
  # startTimeout: 1200 # Extend because of large image size.
  uid: # let openshift set the value
  fsGid:
  cloudMetadata:
    blockWithIptables: false
  storage:
    type: dynamic
    capacity: 5Gi
    homeMountPath: /home/jovyan
    dynamic:
      storageClass: ocs-storagecluster-ceph-rbd
      pvcNameTemplate: claim-{username}-{servername}
      volumeNameTemplate: claim-{username}-{servername}
    extraVolumes:
      - name: init-notebook
        configMap:
          name: init-notebook
    extraVolumeMounts:
      - name: init-notebook
        mountPath: /opt/init
        readOnly: true
  image:
#    name: quay.io/jupyter/scipy-notebook
#    tag: latest
    name: ronligt/jupyter-tw1-13
    tag: "1"
  lifecycleHooks:
    postStart:
      exec:
        command:
          - "bash"
          - "-c"
          - >
            if [ ! -e ./worksheet_6b_numpy.ipynb ]; then
              cp -n /opt/init/worksheet_6b_numpy.ipynb ./;
            fi

prePuller:
  containerSecurityContext:
    <<: *security_context
    runAsUser: # let openshift set the value
    runAsGroup: # let openshift set the value
  hook:
    enabled: true
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
  pause:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value

scheduling:
  userScheduler:
    enabled: false
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
