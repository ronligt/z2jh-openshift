# Note: you can amend this values.yaml file to substitute your own custom docker images instead of those
# provided by the Jupyter project if required.

proxy:
  service:
    type: ClusterIP
  https: # Enable and extend to configure HTTPS.
    enabled: false
  traefik:
    containerSecurityContext: &security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  secretSync:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
  chp:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value

hub:
  podSecurityContext:
    fsGroup:
    # Solves warning about group membership in terminal
    fsGroupChangePolicy: OnRootMismatch
  containerSecurityContext:
    <<: *security_context
    runAsUser: # let openshift set the value
    runAsGroup: # let openshift set the value
  config:
    Authenticator:
      admin_users:
        - rligteringen
        - joffreywallaar
        - ronald
    GenericOAuthenticator:
      client_id: "notebook-tw1-13.apps.ocp.k8s.tudelft.nl"
      client_secret: "5d6665d1-6f2c-41be-a877-df8f62f95b8f"   # or pull from a secret via extraEnv (below)
      authorize_url: "https://auth-test.tudelft.nl/auth/realms/login-tudelft/protocol/openid-connect/auth"
      token_url: "https://auth-test.tudelft.nl/auth/realms/login-tudelft/protocol/openid-connect/token"
      userdata_url: "https://auth-test.tudelft.nl/auth/realms/login-tudelft/protocol/openid-connect/userinfo"
      oauth_callback_url: "https://notebook-tw1-13.apps.ocp.k8s.tudelft.nl/hub/oauth_callback"
      scope:
        - openid
      username_claim: "preferred_username"
      login_service: "TU Delft netID"
      allow_all: true
    JupyterHub:
      authenticator_class: generic-oauth
  extraConfig:
    # Take of @tudelft.nl from preferred_username as netid is not provided by TU OpenID
    10-strip-domain: |
      # Strip @domain from the username returned by the IdP
      from oauthenticator.generic import GenericOAuthenticator

      async def strip_domain(authenticator, handler, auth_model):
          # auth_model["name"] is the username JupyterHub will store
          name = auth_model.get("name") or ""
          if "@" in name:
              auth_model["name"] = name.split("@", 1)[0]
          return auth_model

      c.GenericOAuthenticator.post_auth_hook = strip_domain

singleuser:
  uid: # let openshift set the value
  fsGid:
  cloudMetadata:
    blockWithIptables: false
  # cpu:
  #   limit: 2
  # memory:
  #   limit: '4Gi'
  storage:
    # Prefer one home-storage with home directory per user
    # shortens startup time new users.
    # Make sure you first do `oc apply -f shared-home.yaml`!
    type: static
    static:
      pvcName: 'shared-home'
      subPath: '{username}'
  image:
    # Check docker/Dockerfile
    # https://jupyter-docker-stacks.readthedocs.io/en/latest/index.html
    # scipy image with nbgitpuller and jupyter-resource-usage
    name: ronligt/jupyter-tw1-13
    tag: "2"

prePuller:
  containerSecurityContext:
    <<: *security_context
    runAsUser: # let openshift set the value
    runAsGroup: # let openshift set the value
  hook:
    enabled: true
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
  pause:
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value

scheduling:
  userScheduler:
    # Turn off userSchedular as we're not admin of OpenShift
    enabled: false
    containerSecurityContext:
      <<: *security_context
      runAsUser: # let openshift set the value
      runAsGroup: # let openshift set the value
